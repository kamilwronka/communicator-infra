name: "Infra - dev"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
  TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_jwt_auth_secret_key: ${{ secrets.JWT_AUTH_SECRET_KEY }}
  TF_VAR_jwt_auth_secret_public_key: ${{ secrets.JWT_AUTH_SECRET_PUBLIC_KEY }}
  TF_VAR_key_auth_key: ${{ secrets.KEY_AUTH_KEY }}
  TF_VAR_tls_secret_crt: ${{ secrets.TLS_SECRET_CRT }}
  TF_VAR_tls_secret_key: ${{ secrets.TLS_SECRET_KEY }}
  TF_VAR_cors_origins: ${{ secrets.CORS_ORIGINS }}
  TF_VAR_docker_config_json: ${{ secrets.DOCKER_CONFIG_JSON }}
  TF_VAR_kube_config_path: "/home/deploy/config"
  KUBECONFIG: /home/deploy/config

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - master
    paths:
      - "environments/dev/**"
      - ".github/workflows/dev.yml"
      - "modules/**"
  pull_request:
    branches:
      - master
    paths:
      - "environments/dev/**"
      - ".github/workflows/dev.yml"
      - "modules/**"

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Terraform
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create Kubernetes config directory
        run: sudo mkdir -p /home/deploy
      - name: Copy Kubernetes config to access the cluster
        run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > $KUBECONFIG
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.3
          terraform_wrapper: false
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./environments/dev
        shell: bash
      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -no-color -out tf.plan
        working-directory: ./environments/dev
        shell: bash
      - name: Terraform Show
        id: show
        run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt
        working-directory: ./environments/dev
        shell: bash
      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -input=false tf.plan
        working-directory: ./environments/dev
        shell: bash
